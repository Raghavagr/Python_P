'''
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.
Note: You can only move either down or right at any point in time.
Input: grid = [[1,3,1],[1,5,1],[4,2,1]]
Output: 7
Explanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.
Example 2:
Input: grid = [[1,2,3],[4,5,6]]
Output: 12   
'''

// URL - https://ide.geeksforgeeks.org/lHQSEERcvS

#code
grid = [[1,2,3],[4,5,6], [7, 8, 9]]

m = len(grid)  #row length
n = len(grid[0]) #column length

#prepare one 0 matrix same as grid where we will store sum
result = [[0 for x in range(n)] for x in range(m)]

result[0][0] = grid[0][0]

for j in range(1, n):
    result[0][j] = grid[0][j] + grid[0][j-1]
    
for i in range(1, m):
    result[i][0] = grid[i][0] + grid[i-1][0]
    
for i in range(1, m):
    for j in range(1, n):
        result[i][j] = grid[i][j] + min(result[i-j][j], result[i][j-1])
        
print(result)
print(result[m-1][n-1])
