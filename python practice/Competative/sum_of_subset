// Sum of subset problem using DP

  Problem statement
  
'''
sum of subset
A={3, 4, 5, 2},target=6
{},
{3,4},
{3,4,5}
{4,2} -> True
...
..
.
'''

// SOL URL - https://ide.geeksforgeeks.org/OixPtbOFR7

#code
def sumofsubset(arr, target):
    n = len(arr)
    dp = [[False for j in range(target+1)] for i in range(n+1)]
        #[[False,False,False,False,False,False,False],
        # [False,False,False,False,False,False,False],
        # [False,False,False,False,False,False,False],
        # [False,False,False,False,False,False,False],
        # [False,False,False,False,False,False,False],
        #]
    
    for i in range(n+1):  #1st col True
        dp[i][0] = True
        
    for j in range(1, target+1):
        dp[0][j] = True
        
    for i in range(1, n+1):
        for j in range(1, target+1):
            if j < arr[i-1]:
                dp[i][j] = dp[i-1][j]
            if j>= arr[i-1]:
                dp[i][j] = dp[i-1][j] or dp[i-1][j-arr[i-1]]
    
    #print(dp)
    '''
    [[True, False, False, False, False, False, False],
    [True, False, False, True, False, False, False],
     [True, False, False, True, True, False, False], 
     [True, False, False, True, True, True, False],
     [True, False, True, True, True, True, True]]
    '''
   
    return dp[n][target]
   
arr = [3,4,5,2]
print(sumofsubset(arr, 6))

                
        
