// Implement circular queue using Array

// URL ->  https://ide.geeksforgeeks.org/068a9632-4af1-4b66-87c4-c67bc5f29168

class Queue:
    def __init__(self, maxsize):
        self.lst = [None] * maxsize
        self.maxsize = maxsize
        self.top = -1
        self.start = -1
        
    def __str__(self):
        values = [str(x) for x in self.lst]
        return ' '.join(values)
        
    def isFull(self):
        if self.top + 1 == self.start:
            return True
            
        elif self.start == 0 and self.top+1 == self.maxsize:
            return True
            
        else:
            return False
            
    def isEmpty(self):
        if self.top == -1:
            return True
            
        else:
            return False
            
    def Enqueue(self, item):
        if self.isFull():
            return 'Queue overflow'
            
        else:
            if self.top+1 == self.maxsize:
                self.top = 0
            else:
                self.top += 1
                if self.start == -1:
                    self.start = 0
                    
            self.lst[self.top] = item
            return 'item inserted at end of queue'
            
    def Deque(self):
        if self.isEmpty():
            return 'Queue is empty'
        else:
            firstElement = self.lst[self.start]
            start = self.start
            if self.start == self.top:
                self.start = -1
                self.top = -1
            elif self.start +1 == self.maxsize:
                self.start = 0
                
            else:
                self.start += 1
                
            self.lst[start] = None
            return firstElement
            
    def Peek(self):
        if self.isEmpty():
            return 'Queue empty'
            
        else:
            return self.lst[self.start]
            
    def Delete(self):
        self.lst = [None] * self.maxsize
        self.top = -1
        self.start = -1
        
        
circQueue = Queue(4)
circQueue.Enqueue(2)
circQueue.Enqueue(4)
circQueue.Enqueue(7)
print(circQueue)

print("*** Pop ***")
print(circQueue.Deque())

print(circQueue)
