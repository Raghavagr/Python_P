Find the maximum sum subarray in an array with negative and positive integerst (KADAKNe's Algorithm)

// URL - https://ide.geeksforgeeks.org/psowRzlHLe

# Maximum Sum Subarray (Kadakne Algorithm)

#code

## Naive Approach
def bruteForce(arr):
    n = len(arr)
    subarray = []
    mxsum = 0
    for i in range(n+1):
        for j in range(i+1, n+1):
            subarray = arr[i:j]
            mxsum = max(mxsum, sum(subarray))
    return mxsum
    

##  Dynamic Approach
def dp_sumsubarray(arr):
    n = len(arr)
    for i in range(1, n):
        if arr[i-1] > 0:
            arr[i] = arr[i] + arr[i-1]
            
    ans = max(arr)
    return ans
    
testcase = [-2, -3, 4, -1, -2, 1, 5, -3]
print("max sum using naive: ", bruteForce(testcase))
print("max sum using Dynamic: ", dp_sumsubarray(testcase))
