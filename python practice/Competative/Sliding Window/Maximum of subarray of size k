// Given an array and an integer K, find the maximum for each and every contiguous subarray of size k.

// SOL URL -> https://ide.geeksforgeeks.org/Kjid8tCdt1

def FindMaximumOfSubarray(arr, n, k):
    if k > n:
        return [max(arr)]
        
    ans = []
    temp = []
    start = 0
    end = 0
    
    while end < n:
        if len(temp) == 0:
            temp.append(arr[end])
        
        else:
            while len(temp) != 0 and temp[-1] < arr[end]:
                temp.pop()
                
            temp.append(arr[end])
            
        if ((end - start + 1) < k):
            end += 1
            
        elif ((end - start + 1) == k):
            ans.append(temp[0])
            if arr[start] == temp[0]:
                temp.pop(0)
                
            start += 1
            end += 1
            
            
    return ans
    
#arr = [1,3,-1,-3,5,3,6,7] #k=3
#arr = [1, 2, 3, 1, 4, 5, 2, 3, 6] #k=3
#arr = [8, 5, 10, 7, 9, 4, 15, 12, 90, 13] #k=4
arr = [1,3,1,2,0,5]

n = len(arr)
k = 3
ans = FindMaximumOfSubarray(arr, n, k)
print(ans)
